version: '1'
name: devops-project
services:
  application:
    container_name: devops-application
    build: 
      context: ./application
      dockerfile: dockerfile.prod
    ports: 
      - 3000:3000
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - database
      - messagebus
    environment:
      - MESSAGE_QUEUE=amqp://devops-messagebus
      - MONGO_URL=mongodb://admin:admin@devops-db:27017
  logger:
    container_name: devops-logger
    build: 
      context: ./logger
      dockerfile: dockerfile.prod
    volumes:
      - logs:/logs
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - messagebus
    environment:
      - MESSAGE_QUEUE=amqp://devops-messagebus
      - MONGO_URL=mongodb://admin:admin@devops-logs:27018
  messagebus:
    container_name: devops-messagebus
    image: rabbitmq:latest
  database:
    container_name: devops-db
    image: mongo:latest
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=devops-db
    expose:
      - 27017
    volumes:
       - app_data:/data/db
  logdatabase:
    container_name: devops-logs
    image: mongo:latest
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=devops-logs
    expose:
      - 27018
    volumes:
       - log_data:/data/db
volumes:
  app_data:
  log_data: